---
title: "NYC Payroll Policy Analysis"
author: "Shubh Goyal"
date: Today
format:
  html:
    toc: true
    toc-title: "Navigation"
    toc-location: left
    number-sections: true
    theme: cosmo
    code-fold: true
    code-summary: "Show Code ðŸ’¡"
    highlight-style: github
execute:
  echo: true
  message: false
  warning: false
---

# Introduction

This report analyzes NYC payroll data to evaluate potential policies aimed at reducing taxpayer expenses. We examine three policies:

1\. **Capping salaries at the mayoral level**

2\. **Increasing staffing to reduce overtime**

3\. **A custom policy proposal**

The analysis is based on historical payroll data, and all calculations are made using standardized assumptions.

# Load Data and Libraries

## Data Preparation

`library(tidyverse)`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`library(lubridate)`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`library(scales)`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`library(DT)`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

## Load Data

`payroll_data <- read_csv("nyc_payroll_data.csv")`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

## Inspect Data

`payroll_data <- payroll_data %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`mutate(`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`agency_name = str_to_title(agency_name),`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`last_name = str_to_title(last_name),`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`first_name = str_to_title(first_name),`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`work_location_borough = str_to_title(work_location_borough),`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`title_description = str_to_title(title_description),`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`leave_status = str_to_title(leave_status_as_of_june_30)`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`)`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`payroll_data <- payroll_data %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`mutate(salary = as.numeric(salary),`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`reg_hours = as.numeric(reg_hours),`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`ot_hours = as.numeric(ot_hours))`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`glimpse(payroll_data)`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

![](images/clipboard-2596235769.png){width="727"}

# Mayor Eric Adams Payroll Analysis

## Mayor Eric Adams's Salary

`mayor_data <- payroll_data %>%`

`filter(str_detect( first_name, "Eric") & str_detect( last_name , "Adams")) %>%`

`select( fiscal_year , title_description , agency_name , base_salary ) %>%`

`arrange( fiscal_year )`

`mayor_data %>%`

`mutate( base_salary = dollar( base_salary )) %>%`

`datatable(options = list( searching = FALSE, paging = FALSE, info = FALSE`

`))`

![](images/clipboard-3743588534.png)

## Calculation of Total Compensation

`payroll_data <- payroll_data %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`mutate (`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`total_compensation = case_when(`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`pay_basis == "per Annum" ~ base_salary,`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`pay_basis == "per Hour" ~ base_salary * regular_hours + (base_salary * 1.5 * ot_hours),`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`pay_basis == "per Day" ~ base_salary * (regular_hours / 7.5),`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`TRUE ~ base_salary ) )`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`datatable(`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`payroll_data %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`select(first_name, last_name, agency_name, title_description, pay_basis, base_salary, regular_hours, ot_hours, total_compensation) %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`arrange(desc(total_compensation)) %>% s`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`lice_head(n = 10),`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`options = list(scrollX = TRUE)`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`)`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

![](images/clipboard-60499506.png)

# Key Payroll Analysis

This section answers critical payroll-related questions usingÂ **NYC Payroll Data**.

1.  **Which job title has the highest base rate of pay? (If needed, assume a standard 2000-hour work year and no overtime.)**

`highest_base_rate <- payroll_data %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`mutate(hourly_rate = base_salary / 2000) %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`arrange(desc(hourly_rate)) %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`select(title_description, agency_name, hourly_rate) %>% slice(1)`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`highest_base_rate`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

**Result:**

![](images/clipboard-2226262486.png)

2.  **Which individual & in what year had the single highest city total payroll (regular and overtime combined)?**

`highest_earning_employee <- payroll_data %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`mutate(total_compensation = base_salary + total_ot_paid + total_other_pay) %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`arrange(desc(total_compensation)) %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`select(fiscal_year, first_name, last_name, title_description, agency_name, total_compensation) %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`slice(1)`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`print(highest_earning_employee)`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

**Result:**

![](images/clipboard-2541179802.png)

3.  **Which individual worked the most overtime hours in this data set?**

`most_overtime_employee <- payroll_data %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`arrange(desc(ot_hours)) %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`select(fiscal_year, first_name, last_name, title_description, agency_name, ot_hours) %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`slice(1)`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`print(most_overtime_employee)`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

**Result:**

![](images/clipboard-3542957647.png)

4.  **Which agency has the highest average total annual payroll (base and overtime pay per employee)?**

`highest_avg_payroll_agency <- payroll_data %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`group_by(agency_name) %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`summarize(avg_total_pay = mean(base_salary + total_ot_paid + total_other_pay, na.rm = TRUE)) %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`arrange(desc(avg_total_pay)) %>% slice(1)`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`highest_avg_payroll_agency`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

**Result:**

![](images/clipboard-174501791.png)

5.  **Which agency has the most employees on payroll in each year?**

`most_employees_per_year <- payroll_data %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`group_by(fiscal_year, agency_name) %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`summarize(employee_count = n()) %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`arrange(fiscal_year, desc(employee_count)) %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`group_by(fiscal_year) %>% slice(1)`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`most_employees_per_year`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

**Result:**

![](images/clipboard-196844467.png)

6.  **Which agency has the highest overtime usage (compared to regular hours)?**

`highest_overtime_usage <- payroll_data %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`mutate(overtime_ratio = ot_hours / (2000 + ot_hours)) %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`group_by(agency_name) %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`summarize(avg_overtime_ratio = mean(overtime_ratio, na.rm = TRUE)) %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`arrange(desc(avg_overtime_ratio)) %>% slice(1)`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`highest_overtime_usage`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

**Result:**

![](images/clipboard-3117463055.png)

7.  **What is the average salary of employees who work outside the five boroughs? (That is, whose work_location_borough is not one of the five counties.)**

`avg_salary_outside_nyc <- payroll_data %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`filter(!work_location_borough %in% c("Manhattan", "Brooklyn", "Queens", "Bronx", "Staten Island")) %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`summarize(avg_salary = mean(base_salary, na.rm = TRUE))`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`avg_salary_outside_nyc`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

**Result:**

![](images/clipboard-3155006546.png)

8.  **How much has the cityâ€™s aggregate payroll grown over the past 10 years?**

`payroll_growth <- payroll_data %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`group_by(fiscal_year) %>% summarize(total_payroll = sum(base_salary + total_ot_paid + total_other_pay, na.rm = TRUE)) %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`arrange(fiscal_year) %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`mutate(payroll_growth = (total_payroll / lag(total_payroll) - 1) * 100,`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`payroll_growth = paste0(round(payroll_growth, 2), "%"))`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`payroll_growth`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

**Result:**

![](images/clipboard-606587375.png)

# Policy Analysis

## Policy 1: Capping Salaries at Mayoral Level

### Compute the Mayor's salary per year

`mayor_salary <- payroll_data %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`filter(title_description == "Mayor") %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`select(fiscal_year, total_compensation)`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`high_salaries <- payroll_data %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

### Identify High Earners

`high_salaries <- payroll_data %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`inner_join(mayor_salary, by = "fiscal_year", suffix = c("_emp", "_mayor")) %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`filter(total_compensation_emp > total_compensation_mayor)`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

**Result:**

![](images/clipboard-1412804773.png)

### Total Savings

`total_savings <- sum(high_salaries$total_compensation_emp - high_salaries$total_compensation_mayor, na.rm = TRUE)`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`datatable( high_salaries %>% select(fiscal_year, first_name, last_name, title_description, agency_name, total_compensation_emp, total_compensation_mayor) %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`slice_head(n = 100), options = list(scrollX = TRUE)`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

**Result:**

![](images/clipboard-3454738161.png)

![](images/clipboard-1393921063.png)

## Policy 2: Increasing Staffing to Reduce Overtime Expenses

### Calculate total overtime

`overtime_reduction <- payroll_data %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`group_by(agency_name, title_description) %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`summarize( total_overtime_hours = sum(ot_hours, na.rm = TRUE), full_time_equivalent_needed = total_overtime_hours / 2000 ) %>% arrange(desc(total_overtime_hours))`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`datatable(overtime_reduction, options = list(scrollX = TRUE))`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

**Result:**

![](images/clipboard-3391130787.png)

### Total Potential Savings

`overtime_savings <- payroll_data %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`group_by(agency_name, title_description) %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`summarize( overtime_cost = sum(1.5 * base_salary * ot_hours, na.rm = TRUE),`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`regular_cost = sum(base_salary * (ot_hours / 40), na.rm = TRUE),`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`potential_savings = overtime_cost - regular_cost ) %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`arrange(desc(potential_savings))`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`datatable(overtime_savings, options = list(scrollX = TRUE))`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

**Result:**

![](images/clipboard-3292972212.png)

### Total Agency Savings

`agency_savings <- overtime_savings %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`group_by(agency_name) %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`summarize( total_overtime_cost = sum(overtime_cost, na.rm = TRUE),`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`total_regular_cost = sum(regular_cost, na.rm = TRUE),`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`total_savings = sum(potential_savings, na.rm = TRUE) ) %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`arrange(desc(total_savings))`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`datatable(agency_savings, options = list(scrollX = TRUE))`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

**Result:**

![](images/clipboard-1570972245.png)

## Policy 3: Overtime Reduction Through Strategy Hiring

### Overview

Many NYC agencies rely heavily on overtime (OT) to compensate for staffing shortages, significantly inflating payroll costs. Instead of paying excessive overtime wages, the city could hire additional employees to reduce OT dependency.

**Analysis Steps:**

1.  **Identify High-Overtime Employees**
2.  **Compare Costs**
3.  **Potential Savings**
4.  **Recommendation**

### Identify High-Overtime Employees

Find employees with excessive overtime hours (e.g., more than 500 OT hours per year).

`high_overtime_employees <- payroll_data %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`filter(ot_hours > 500) %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`group_by(title_description, agency_name) %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`summarize( avg_overtime_hours = mean(ot_hours, na.rm = TRUE),`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`total_overtime_pay = sum(total_ot_paid, na.rm = TRUE), num_high_overtime_employees = n(),`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`avg_base_salary = mean(base_salary, na.rm = TRUE) ) %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`arrange(desc(total_overtime_pay))`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

**Result:**

![](images/clipboard-1167216310.png)

### Compare Costs of Overtime vs. Hiring

Assuming a standard 2,000-hour work year

`estimated_new_hires <- high_overtime_employees %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`mutate( equivalent_full_time_positions = round(avg_overtime_hours / 2000, 1), total_new_hire_salary = equivalent_full_time_positions * avg_base_salary ) %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`select(agency_name, title_description, num_high_overtime_employees, equivalent_full_time_positions, total_overtime_pay, total_new_hire_salary)`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

**Result:**

![](images/clipboard-4258796401.png)

### Calculate Potential Savings

Compare the total overtime cost vs. the cost of hiring new employees

`potential_savings <- estimated_new_hires %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`mutate(savings = total_overtime_pay - total_new_hire_salary) %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`arrange(desc(savings))`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`datatable(potential_savings, options = list(scrollX = TRUE))`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

**Result:**

![](images/clipboard-3973096500.png)

### Identify Agencies with Highest OT Dependency

Find agencies where overtime reliance is highest

`overtime_by_agency <- payroll_data %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`group_by(agency_name) %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`summarize( total_overtime_pay = sum(total_ot_paid, na.rm = TRUE),`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`total_base_salary = sum(base_salary, na.rm = TRUE),`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`ot_to_salary_ratio = total_ot_paid / base_salary ) %>%`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

`arrange(desc(ot_to_salary_ratio))`{style="padding: 0px 1px; border-width: 1px; border-style: solid; border-color: rgb(230, 230, 230) !important; border-image: initial; background-color: rgb(243, 243, 243) !important; font-family: \"Lucida Console\", monospace !important; font-size: 10pt !important;"}

**Result:**

![](images/clipboard-2810774840.png)

### Recommendations

-   Agencies with the highest OT-to-salary ratios should prioritize hiring over paying OT.
-   Job roles with excessive OT hours (e.g., NYPD, FDNY, sanitation workers) should be assessed for staffing shortages.
-   The city could cap annual OT hours per employee and use the savings to hire additional workers

# Conclusion & Final Recommendation

Each policy presents **unique benefits and trade-offs**. Based on financial impact and feasibility:

**Best Policy Choice**: Policy III (Strategic Overtime Hiring).

**Secondary Option**: Policy II (Broad Hiring to Cut Overtime).

**Least Effective**: Policy I (Salary Cap), due to talent retention concerns.

Implement **Policy 3** with phased hiring & overtime monitoring ( Final Recommendation )
